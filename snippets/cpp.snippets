snippet jjclass
	class ${1:classname}
	{
	public:
		/// Конструктор по-умолчанию
		${1:classname}(); 

		/// Параметризованный конструктор
		${1:classname}(args); 

		/// Конструктор копирования
		${1:classname}(const ${1:classname}& other); 

		/// Конструктор перемещения
		${1:classname}(${1:classname}&& other) noexcept; 

		/// copy-assignment
		${1:classname}& operator=(${1:classname}& other) = default; 

		/// move-assignment
		${1:classname}& operator=(${1:classname}&& other) = default; 


	protected:

	private:

	};

snippet jjclassdoc
  /**
	 * @brief
	 * @tparam
	 */


snippet jjinterface
	class ${1:classname}
	{
		public:
			virtual ~${1:classname}() = default;
			${1:classname}(${2:args});

		protected:

		private:

	};


snippet jjfuncdoc
  /**
	 * @brief 
	 * @param
	 * @returns
	 */

snippet jjfunc
	${1:rettype} ${2:funcname}(${3:args})
	{
		
	}

snippet jjconstr
	${1:funcname}(${2:args})
	{
		
	}

snippet jjnamespace
	namespace ${1:namespace}
	{



	} // namespace ${1:namespace}

snippet jjgetter
  ${1:returntype} get_${2:objectname}() const
	{
		return this->${2:objectname};
	}
